DISCLAIMER: the parts of the source code responsible for parsing have been automatically generated based on the 'grammar.cf' file, with the use of the BNFC generator. This is NOT my Haskell code! The most important work is in the src/Denotations.hs, src/TypeChecker.hs, src/grammar.cf files.

To build, execute 'make' in the 'src' directory containing the source files of the interpreter. An executable src/interpreter will be created, which can then be run in the standard way, e.g. ./interpreter ../good/arth_operations.

To run tests, execute ./run_tests.sh in the main directory. If nothing is printed by the script, it means the tests have been passed.

The 'good' and 'bad' directories contain sample programs as described in the task, correct and constructively incorrect, respectively. Their expected output can be seen in expected_output.txt.

Language description is contained in the file antoni_maciag.pdf. In particular, the language's continuational semantics can be seen there. The solution in Haskell (file src/Denotations.hs) is strictly based on this semantics, and it can be seen that the code is strikingly similar to the denotations presented there. The typechecker module is contained in src/TypeChecker.hs.


