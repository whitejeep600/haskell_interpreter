-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from ParGrammar.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	%start_pMain_internal -> Main                      (1)
	%start_pFunDecl_internal -> FunDecl                (2)
	%start_pDecl_internal -> Decl                      (3)
	%start_pArgDecl_internal -> ArgDecl                (4)
	%start_pListArgDecl_internal -> ListArgDecl        (5)
	%start_pBlock_internal -> Block                    (6)
	%start_pInstr_internal -> Instr                    (7)
	%start_pElse_internal -> Else                      (8)
	%start_pListInstr_internal -> ListInstr            (9)
	%start_pExp_internal -> Exp                        (10)
	%start_pExp1_internal -> Exp1                      (11)
	%start_pExp2_internal -> Exp2                      (12)
	%start_pExp3_internal -> Exp3                      (13)
	%start_pExp4_internal -> Exp4                      (14)
	%start_pExp5_internal -> Exp5                      (15)
	%start_pExp6_internal -> Exp6                      (16)
	%start_pListArg_internal -> ListArg                (17)
	%start_pArg_internal -> Arg                        (18)
	%start_pListIdent_internal -> ListIdent            (19)
	%start_pListDecl_internal -> ListDecl              (20)
	%start_pListFunDecl_internal -> ListFunDecl        (21)
	%start_pType_internal -> Type                      (22)
	%start_pBool_internal -> Bool                      (23)
	Ident -> L_Ident                                   (24)
	Integer -> L_integ                                 (25)
	String -> L_quoted                                 (26)
	Program -> ListFunDecl Main                        (27)
	Main -> 'main' Block                               (28)
	FunDecl -> 'def' Type Ident '(' ListArgDecl ')' Block   (29)
	Decl -> FunDecl                                    (30)
	Decl -> Type Ident '=' Exp ';'                     (31)
	Decl -> 'const' Type Ident '=' Exp ';'             (32)
	ArgDecl -> Type Ident                              (33)
	ArgDecl -> 'const' Type Ident                      (34)
	ListArgDecl ->                                     (35)
	ListArgDecl -> ArgDecl                             (36)
	ListArgDecl -> ArgDecl ',' ListArgDecl             (37)
	Block -> '{' ListDecl ListInstr '}' ';'            (38)
	Instr -> Ident '=' Exp ';'                         (39)
	Instr -> 'if' Exp 'then' Instr Else 'fi' ';'       (40)
	Instr -> 'while' Exp 'do' Instr                    (41)
	Instr -> 'print' Exp ';'                           (42)
	Instr -> 'return' Exp ';'                          (43)
	Instr -> 'break' ';'                               (44)
	Instr -> 'raise' Ident ';'                         (45)
	Instr -> 'continue' ';'                            (46)
	Instr -> 'try' Block 'except' Ident ListIdent Block   (47)
	Instr -> Block                                     (48)
	Instr -> Exp ';'                                   (49)
	Else ->                                            (50)
	Else -> 'else' Instr                               (51)
	ListInstr ->                                       (52)
	ListInstr -> Instr ListInstr                       (53)
	Exp -> Exp1 'or' Exp                               (54)
	Exp -> Exp1                                        (55)
	Exp1 -> Exp2 'and' Exp1                            (56)
	Exp1 -> Exp2                                       (57)
	Exp2 -> Exp3 '==' Exp3                             (58)
	Exp2 -> Exp3 '!=' Exp3                             (59)
	Exp2 -> Exp3 '<=' Exp3                             (60)
	Exp2 -> Exp3 '>=' Exp3                             (61)
	Exp2 -> Exp3 '<' Exp3                              (62)
	Exp2 -> Exp3 '>' Exp3                              (63)
	Exp2 -> Exp3                                       (64)
	Exp3 -> Exp3 '+' Exp4                              (65)
	Exp3 -> Exp3 '-' Exp4                              (66)
	Exp3 -> Exp3 '#' Exp4                              (67)
	Exp3 -> Exp4                                       (68)
	Exp4 -> Exp4 '*' Exp5                              (69)
	Exp4 -> Exp4 '/' Exp5                              (70)
	Exp4 -> Exp5                                       (71)
	Exp5 -> '-' Integer                                (72)
	Exp5 -> 'not' Exp6                                 (73)
	Exp5 -> Exp6                                       (74)
	Exp6 -> Integer                                    (75)
	Exp6 -> Bool                                       (76)
	Exp6 -> String                                     (77)
	Exp6 -> Ident                                      (78)
	Exp6 -> Ident '(' ListArg ')'                      (79)
	Exp6 -> '(' Exp ')'                                (80)
	ListArg ->                                         (81)
	ListArg -> Arg                                     (82)
	ListArg -> Arg ',' ListArg                         (83)
	Arg -> Exp                                         (84)
	Arg -> 'ref' Ident                                 (85)
	ListIdent ->                                       (86)
	ListIdent -> Ident                                 (87)
	ListIdent -> Ident ',' ListIdent                   (88)
	ListDecl ->                                        (89)
	ListDecl -> Decl ListDecl                          (90)
	ListFunDecl ->                                     (91)
	ListFunDecl -> FunDecl ListFunDecl                 (92)
	Type -> 'bool'                                     (93)
	Type -> 'int'                                      (94)
	Type -> 'str'                                      (95)
	Bool -> 'true'                                     (96)
	Bool -> 'false'                                    (97)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!='           { PT _ (TS _ 1) }
	'#'            { PT _ (TS _ 2) }
	'('            { PT _ (TS _ 3) }
	')'            { PT _ (TS _ 4) }
	'*'            { PT _ (TS _ 5) }
	'+'            { PT _ (TS _ 6) }
	','            { PT _ (TS _ 7) }
	'-'            { PT _ (TS _ 8) }
	'/'            { PT _ (TS _ 9) }
	';'            { PT _ (TS _ 10) }
	'<'            { PT _ (TS _ 11) }
	'<='           { PT _ (TS _ 12) }
	'='            { PT _ (TS _ 13) }
	'=='           { PT _ (TS _ 14) }
	'>'            { PT _ (TS _ 15) }
	'>='           { PT _ (TS _ 16) }
	'and'          { PT _ (TS _ 17) }
	'bool'         { PT _ (TS _ 18) }
	'break'        { PT _ (TS _ 19) }
	'const'        { PT _ (TS _ 20) }
	'continue'     { PT _ (TS _ 21) }
	'def'          { PT _ (TS _ 22) }
	'do'           { PT _ (TS _ 23) }
	'else'         { PT _ (TS _ 24) }
	'except'       { PT _ (TS _ 25) }
	'false'        { PT _ (TS _ 26) }
	'fi'           { PT _ (TS _ 27) }
	'if'           { PT _ (TS _ 28) }
	'int'          { PT _ (TS _ 29) }
	'main'         { PT _ (TS _ 30) }
	'not'          { PT _ (TS _ 31) }
	'or'           { PT _ (TS _ 32) }
	'print'        { PT _ (TS _ 33) }
	'raise'        { PT _ (TS _ 34) }
	'ref'          { PT _ (TS _ 35) }
	'return'       { PT _ (TS _ 36) }
	'str'          { PT _ (TS _ 37) }
	'then'         { PT _ (TS _ 38) }
	'true'         { PT _ (TS _ 39) }
	'try'          { PT _ (TS _ 40) }
	'while'        { PT _ (TS _ 41) }
	'{'            { PT _ (TS _ 42) }
	'}'            { PT _ (TS _ 43) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	%start_pMain_internal rule  1
	%start_pFunDecl_internal rule  2
	%start_pDecl_internal rule  3
	%start_pArgDecl_internal rule  4
	%start_pListArgDecl_internal rule  5
	%start_pBlock_internal rule  6
	%start_pInstr_internal rule  7
	%start_pElse_internal rule  8
	%start_pListInstr_internal rule  9
	%start_pExp_internal rule  10
	%start_pExp1_internal rule  11
	%start_pExp2_internal rule  12
	%start_pExp3_internal rule  13
	%start_pExp4_internal rule  14
	%start_pExp5_internal rule  15
	%start_pExp6_internal rule  16
	%start_pListArg_internal rule  17
	%start_pArg_internal rule  18
	%start_pListIdent_internal rule  19
	%start_pListDecl_internal rule  20
	%start_pListFunDecl_internal rule  21
	%start_pType_internal rule  22
	%start_pBool_internal rule  23
	Ident           rule  24
	Integer         rule  25
	String          rule  26
	Program         rule  27
	Main            rule  28
	FunDecl         rule  29
	Decl            rules 30, 31, 32
	ArgDecl         rules 33, 34
	ListArgDecl     rules 35, 36, 37
	Block           rule  38
	Instr           rules 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49
	Else            rules 50, 51
	ListInstr       rules 52, 53
	Exp             rules 54, 55
	Exp1            rules 56, 57
	Exp2            rules 58, 59, 60, 61, 62, 63, 64
	Exp3            rules 65, 66, 67, 68
	Exp4            rules 69, 70, 71
	Exp5            rules 72, 73, 74
	Exp6            rules 75, 76, 77, 78, 79, 80
	ListArg         rules 81, 82, 83
	Arg             rules 84, 85
	ListIdent       rules 86, 87, 88
	ListDecl        rules 89, 90
	ListFunDecl     rules 91, 92
	Type            rules 93, 94, 95
	Bool            rules 96, 97

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'def'          shift, and enter state 35
	'main'         reduce using rule 91

	Program        goto state 97
	FunDecl        goto state 33
	ListFunDecl    goto state 98

State 1

	%start_pMain_internal -> . Main                     (rule 1)

	'main'         shift, and enter state 96

	Main           goto state 95

State 2

	%start_pFunDecl_internal -> . FunDecl               (rule 2)

	'def'          shift, and enter state 35

	FunDecl        goto state 94

State 3

	%start_pDecl_internal -> . Decl                     (rule 3)

	'bool'         shift, and enter state 30
	'const'        shift, and enter state 40
	'def'          shift, and enter state 35
	'int'          shift, and enter state 31
	'str'          shift, and enter state 32

	FunDecl        goto state 36
	Decl           goto state 93
	Type           goto state 39

State 4

	%start_pArgDecl_internal -> . ArgDecl               (rule 4)

	'bool'         shift, and enter state 30
	'const'        shift, and enter state 91
	'int'          shift, and enter state 31
	'str'          shift, and enter state 32

	ArgDecl        goto state 92
	Type           goto state 90

State 5

	%start_pListArgDecl_internal -> . ListArgDecl       (rule 5)

	'bool'         shift, and enter state 30
	'const'        shift, and enter state 91
	'int'          shift, and enter state 31
	'str'          shift, and enter state 32
	%eof           reduce using rule 35

	ArgDecl        goto state 88
	ListArgDecl    goto state 89
	Type           goto state 90

State 6

	%start_pBlock_internal -> . Block                   (rule 6)

	'{'            shift, and enter state 83

	Block          goto state 87

State 7

	%start_pInstr_internal -> . Instr                   (rule 7)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'break'        shift, and enter state 75
	'continue'     shift, and enter state 76
	'false'        shift, and enter state 27
	'if'           shift, and enter state 77
	'not'          shift, and enter state 57
	'print'        shift, and enter state 78
	'raise'        shift, and enter state 79
	'return'       shift, and enter state 80
	'true'         shift, and enter state 28
	'try'          shift, and enter state 81
	'while'        shift, and enter state 82
	'{'            shift, and enter state 83
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 70
	Integer        goto state 44
	String         goto state 45
	Block          goto state 71
	Instr          goto state 86
	Exp            goto state 74
	Exp1           goto state 47
	Exp2           goto state 48
	Exp3           goto state 49
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 8

	%start_pElse_internal -> . Else                     (rule 8)

	'else'         shift, and enter state 85
	%eof           reduce using rule 50

	Else           goto state 84

State 9

	%start_pListInstr_internal -> . ListInstr           (rule 9)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'break'        shift, and enter state 75
	'continue'     shift, and enter state 76
	'false'        shift, and enter state 27
	'if'           shift, and enter state 77
	'not'          shift, and enter state 57
	'print'        shift, and enter state 78
	'raise'        shift, and enter state 79
	'return'       shift, and enter state 80
	'true'         shift, and enter state 28
	'try'          shift, and enter state 81
	'while'        shift, and enter state 82
	'{'            shift, and enter state 83
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60
	%eof           reduce using rule 52

	Ident          goto state 70
	Integer        goto state 44
	String         goto state 45
	Block          goto state 71
	Instr          goto state 72
	ListInstr      goto state 73
	Exp            goto state 74
	Exp1           goto state 47
	Exp2           goto state 48
	Exp3           goto state 49
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 10

	%start_pExp_internal -> . Exp                       (rule 10)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp            goto state 69
	Exp1           goto state 47
	Exp2           goto state 48
	Exp3           goto state 49
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 11

	%start_pExp1_internal -> . Exp1                     (rule 11)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp1           goto state 68
	Exp2           goto state 48
	Exp3           goto state 49
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 12

	%start_pExp2_internal -> . Exp2                     (rule 12)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp2           goto state 67
	Exp3           goto state 49
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 13

	%start_pExp3_internal -> . Exp3                     (rule 13)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp3           goto state 66
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 14

	%start_pExp4_internal -> . Exp4                     (rule 14)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp4           goto state 65
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 15

	%start_pExp5_internal -> . Exp5                     (rule 15)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp5           goto state 64
	Exp6           goto state 52
	Bool           goto state 54

State 16

	%start_pExp6_internal -> . Exp6                     (rule 16)

	'('            shift, and enter state 55
	'false'        shift, and enter state 27
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp6           goto state 63
	Bool           goto state 54

State 17

	%start_pListArg_internal -> . ListArg               (rule 17)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'ref'          shift, and enter state 58
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60
	%eof           reduce using rule 81

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp            goto state 46
	Exp1           goto state 47
	Exp2           goto state 48
	Exp3           goto state 49
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	ListArg        goto state 61
	Arg            goto state 62
	Bool           goto state 54

State 18

	%start_pArg_internal -> . Arg                       (rule 18)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'ref'          shift, and enter state 58
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp            goto state 46
	Exp1           goto state 47
	Exp2           goto state 48
	Exp3           goto state 49
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Arg            goto state 53
	Bool           goto state 54

State 19

	%start_pListIdent_internal -> . ListIdent           (rule 19)

	L_Ident        shift, and enter state 25
	%eof           reduce using rule 86

	Ident          goto state 41
	ListIdent      goto state 42

State 20

	%start_pListDecl_internal -> . ListDecl             (rule 20)

	'bool'         shift, and enter state 30
	'const'        shift, and enter state 40
	'def'          shift, and enter state 35
	'int'          shift, and enter state 31
	'str'          shift, and enter state 32
	%eof           reduce using rule 89

	FunDecl        goto state 36
	Decl           goto state 37
	ListDecl       goto state 38
	Type           goto state 39

State 21

	%start_pListFunDecl_internal -> . ListFunDecl       (rule 21)

	'def'          shift, and enter state 35
	%eof           reduce using rule 91

	FunDecl        goto state 33
	ListFunDecl    goto state 34

State 22

	%start_pType_internal -> . Type                     (rule 22)

	'bool'         shift, and enter state 30
	'int'          shift, and enter state 31
	'str'          shift, and enter state 32

	Type           goto state 29

State 23

	%start_pBool_internal -> . Bool                     (rule 23)

	'false'        shift, and enter state 27
	'true'         shift, and enter state 28

	Bool           goto state 26

State 24

	Ident -> . L_Ident                                  (rule 24)

	L_Ident        shift, and enter state 25


State 25

	Ident -> L_Ident .                                  (rule 24)

	'!='           reduce using rule 24
	'#'            reduce using rule 24
	'('            reduce using rule 24
	')'            reduce using rule 24
	'*'            reduce using rule 24
	'+'            reduce using rule 24
	','            reduce using rule 24
	'-'            reduce using rule 24
	'/'            reduce using rule 24
	';'            reduce using rule 24
	'<'            reduce using rule 24
	'<='           reduce using rule 24
	'='            reduce using rule 24
	'=='           reduce using rule 24
	'>'            reduce using rule 24
	'>='           reduce using rule 24
	'and'          reduce using rule 24
	'do'           reduce using rule 24
	'or'           reduce using rule 24
	'then'         reduce using rule 24
	'{'            reduce using rule 24
	L_Ident        reduce using rule 24
	%eof           reduce using rule 24


State 26

	%start_pBool_internal -> Bool .                     (rule 23)

	%eof           accept


State 27

	Bool -> 'false' .                                   (rule 97)

	'!='           reduce using rule 97
	'#'            reduce using rule 97
	')'            reduce using rule 97
	'*'            reduce using rule 97
	'+'            reduce using rule 97
	','            reduce using rule 97
	'-'            reduce using rule 97
	'/'            reduce using rule 97
	';'            reduce using rule 97
	'<'            reduce using rule 97
	'<='           reduce using rule 97
	'=='           reduce using rule 97
	'>'            reduce using rule 97
	'>='           reduce using rule 97
	'and'          reduce using rule 97
	'do'           reduce using rule 97
	'or'           reduce using rule 97
	'then'         reduce using rule 97
	%eof           reduce using rule 97


State 28

	Bool -> 'true' .                                    (rule 96)

	'!='           reduce using rule 96
	'#'            reduce using rule 96
	')'            reduce using rule 96
	'*'            reduce using rule 96
	'+'            reduce using rule 96
	','            reduce using rule 96
	'-'            reduce using rule 96
	'/'            reduce using rule 96
	';'            reduce using rule 96
	'<'            reduce using rule 96
	'<='           reduce using rule 96
	'=='           reduce using rule 96
	'>'            reduce using rule 96
	'>='           reduce using rule 96
	'and'          reduce using rule 96
	'do'           reduce using rule 96
	'or'           reduce using rule 96
	'then'         reduce using rule 96
	%eof           reduce using rule 96


State 29

	%start_pType_internal -> Type .                     (rule 22)

	%eof           accept


State 30

	Type -> 'bool' .                                    (rule 93)

	L_Ident        reduce using rule 93
	%eof           reduce using rule 93


State 31

	Type -> 'int' .                                     (rule 94)

	L_Ident        reduce using rule 94
	%eof           reduce using rule 94


State 32

	Type -> 'str' .                                     (rule 95)

	L_Ident        reduce using rule 95
	%eof           reduce using rule 95


State 33

	ListFunDecl -> FunDecl . ListFunDecl                (rule 92)

	'def'          shift, and enter state 35
	'main'         reduce using rule 91
	%eof           reduce using rule 91

	FunDecl        goto state 33
	ListFunDecl    goto state 141

State 34

	%start_pListFunDecl_internal -> ListFunDecl .       (rule 21)

	%eof           accept


State 35

	FunDecl -> 'def' . Type Ident '(' ListArgDecl ')' Block    (rule 29)

	'bool'         shift, and enter state 30
	'int'          shift, and enter state 31
	'str'          shift, and enter state 32

	Type           goto state 140

State 36

	Decl -> FunDecl .                                   (rule 30)

	'('            reduce using rule 30
	'-'            reduce using rule 30
	'bool'         reduce using rule 30
	'break'        reduce using rule 30
	'const'        reduce using rule 30
	'continue'     reduce using rule 30
	'def'          reduce using rule 30
	'false'        reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'not'          reduce using rule 30
	'print'        reduce using rule 30
	'raise'        reduce using rule 30
	'return'       reduce using rule 30
	'str'          reduce using rule 30
	'true'         reduce using rule 30
	'try'          reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30
	%eof           reduce using rule 30


State 37

	ListDecl -> Decl . ListDecl                         (rule 90)

	'('            reduce using rule 89
	'-'            reduce using rule 89
	'bool'         shift, and enter state 30
	'break'        reduce using rule 89
	'const'        shift, and enter state 40
	'continue'     reduce using rule 89
	'def'          shift, and enter state 35
	'false'        reduce using rule 89
	'if'           reduce using rule 89
	'int'          shift, and enter state 31
	'not'          reduce using rule 89
	'print'        reduce using rule 89
	'raise'        reduce using rule 89
	'return'       reduce using rule 89
	'str'          shift, and enter state 32
	'true'         reduce using rule 89
	'try'          reduce using rule 89
	'while'        reduce using rule 89
	'{'            reduce using rule 89
	'}'            reduce using rule 89
	L_Ident        reduce using rule 89
	L_integ        reduce using rule 89
	L_quoted       reduce using rule 89
	%eof           reduce using rule 89

	FunDecl        goto state 36
	Decl           goto state 37
	ListDecl       goto state 139
	Type           goto state 39

State 38

	%start_pListDecl_internal -> ListDecl .             (rule 20)

	%eof           accept


State 39

	Decl -> Type . Ident '=' Exp ';'                    (rule 31)

	L_Ident        shift, and enter state 25

	Ident          goto state 138

State 40

	Decl -> 'const' . Type Ident '=' Exp ';'            (rule 32)

	'bool'         shift, and enter state 30
	'int'          shift, and enter state 31
	'str'          shift, and enter state 32

	Type           goto state 137

State 41

	ListIdent -> Ident .                                (rule 87)
	ListIdent -> Ident . ',' ListIdent                  (rule 88)

	','            shift, and enter state 136
	'{'            reduce using rule 87
	%eof           reduce using rule 87


State 42

	%start_pListIdent_internal -> ListIdent .           (rule 19)

	%eof           accept


State 43

	Exp6 -> Ident .                                     (rule 78)
	Exp6 -> Ident . '(' ListArg ')'                     (rule 79)

	'!='           reduce using rule 78
	'#'            reduce using rule 78
	'('            shift, and enter state 116
	')'            reduce using rule 78
	'*'            reduce using rule 78
	'+'            reduce using rule 78
	','            reduce using rule 78
	'-'            reduce using rule 78
	'/'            reduce using rule 78
	';'            reduce using rule 78
	'<'            reduce using rule 78
	'<='           reduce using rule 78
	'=='           reduce using rule 78
	'>'            reduce using rule 78
	'>='           reduce using rule 78
	'and'          reduce using rule 78
	'do'           reduce using rule 78
	'or'           reduce using rule 78
	'then'         reduce using rule 78
	%eof           reduce using rule 78


State 44

	Exp6 -> Integer .                                   (rule 75)

	'!='           reduce using rule 75
	'#'            reduce using rule 75
	')'            reduce using rule 75
	'*'            reduce using rule 75
	'+'            reduce using rule 75
	','            reduce using rule 75
	'-'            reduce using rule 75
	'/'            reduce using rule 75
	';'            reduce using rule 75
	'<'            reduce using rule 75
	'<='           reduce using rule 75
	'=='           reduce using rule 75
	'>'            reduce using rule 75
	'>='           reduce using rule 75
	'and'          reduce using rule 75
	'do'           reduce using rule 75
	'or'           reduce using rule 75
	'then'         reduce using rule 75
	%eof           reduce using rule 75


State 45

	Exp6 -> String .                                    (rule 77)

	'!='           reduce using rule 77
	'#'            reduce using rule 77
	')'            reduce using rule 77
	'*'            reduce using rule 77
	'+'            reduce using rule 77
	','            reduce using rule 77
	'-'            reduce using rule 77
	'/'            reduce using rule 77
	';'            reduce using rule 77
	'<'            reduce using rule 77
	'<='           reduce using rule 77
	'=='           reduce using rule 77
	'>'            reduce using rule 77
	'>='           reduce using rule 77
	'and'          reduce using rule 77
	'do'           reduce using rule 77
	'or'           reduce using rule 77
	'then'         reduce using rule 77
	%eof           reduce using rule 77


State 46

	Arg -> Exp .                                        (rule 84)

	')'            reduce using rule 84
	','            reduce using rule 84
	%eof           reduce using rule 84


State 47

	Exp -> Exp1 . 'or' Exp                              (rule 54)
	Exp -> Exp1 .                                       (rule 55)

	')'            reduce using rule 55
	','            reduce using rule 55
	';'            reduce using rule 55
	'do'           reduce using rule 55
	'or'           shift, and enter state 135
	'then'         reduce using rule 55
	%eof           reduce using rule 55


State 48

	Exp1 -> Exp2 . 'and' Exp1                           (rule 56)
	Exp1 -> Exp2 .                                      (rule 57)

	')'            reduce using rule 57
	','            reduce using rule 57
	';'            reduce using rule 57
	'and'          shift, and enter state 134
	'do'           reduce using rule 57
	'or'           reduce using rule 57
	'then'         reduce using rule 57
	%eof           reduce using rule 57


State 49

	Exp2 -> Exp3 . '==' Exp3                            (rule 58)
	Exp2 -> Exp3 . '!=' Exp3                            (rule 59)
	Exp2 -> Exp3 . '<=' Exp3                            (rule 60)
	Exp2 -> Exp3 . '>=' Exp3                            (rule 61)
	Exp2 -> Exp3 . '<' Exp3                             (rule 62)
	Exp2 -> Exp3 . '>' Exp3                             (rule 63)
	Exp2 -> Exp3 .                                      (rule 64)
	Exp3 -> Exp3 . '+' Exp4                             (rule 65)
	Exp3 -> Exp3 . '-' Exp4                             (rule 66)
	Exp3 -> Exp3 . '#' Exp4                             (rule 67)

	'!='           shift, and enter state 128
	'#'            shift, and enter state 118
	')'            reduce using rule 64
	'+'            shift, and enter state 119
	','            reduce using rule 64
	'-'            shift, and enter state 120
	';'            reduce using rule 64
	'<'            shift, and enter state 129
	'<='           shift, and enter state 130
	'=='           shift, and enter state 131
	'>'            shift, and enter state 132
	'>='           shift, and enter state 133
	'and'          reduce using rule 64
	'do'           reduce using rule 64
	'or'           reduce using rule 64
	'then'         reduce using rule 64
	%eof           reduce using rule 64


State 50

	Exp3 -> Exp4 .                                      (rule 68)
	Exp4 -> Exp4 . '*' Exp5                             (rule 69)
	Exp4 -> Exp4 . '/' Exp5                             (rule 70)

	'!='           reduce using rule 68
	'#'            reduce using rule 68
	')'            reduce using rule 68
	'*'            shift, and enter state 121
	'+'            reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	'/'            shift, and enter state 122
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	'and'          reduce using rule 68
	'do'           reduce using rule 68
	'or'           reduce using rule 68
	'then'         reduce using rule 68
	%eof           reduce using rule 68


State 51

	Exp4 -> Exp5 .                                      (rule 71)

	'!='           reduce using rule 71
	'#'            reduce using rule 71
	')'            reduce using rule 71
	'*'            reduce using rule 71
	'+'            reduce using rule 71
	','            reduce using rule 71
	'-'            reduce using rule 71
	'/'            reduce using rule 71
	';'            reduce using rule 71
	'<'            reduce using rule 71
	'<='           reduce using rule 71
	'=='           reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	'and'          reduce using rule 71
	'do'           reduce using rule 71
	'or'           reduce using rule 71
	'then'         reduce using rule 71
	%eof           reduce using rule 71


State 52

	Exp5 -> Exp6 .                                      (rule 74)

	'!='           reduce using rule 74
	'#'            reduce using rule 74
	')'            reduce using rule 74
	'*'            reduce using rule 74
	'+'            reduce using rule 74
	','            reduce using rule 74
	'-'            reduce using rule 74
	'/'            reduce using rule 74
	';'            reduce using rule 74
	'<'            reduce using rule 74
	'<='           reduce using rule 74
	'=='           reduce using rule 74
	'>'            reduce using rule 74
	'>='           reduce using rule 74
	'and'          reduce using rule 74
	'do'           reduce using rule 74
	'or'           reduce using rule 74
	'then'         reduce using rule 74
	%eof           reduce using rule 74


State 53

	%start_pArg_internal -> Arg .                       (rule 18)

	%eof           accept


State 54

	Exp6 -> Bool .                                      (rule 76)

	'!='           reduce using rule 76
	'#'            reduce using rule 76
	')'            reduce using rule 76
	'*'            reduce using rule 76
	'+'            reduce using rule 76
	','            reduce using rule 76
	'-'            reduce using rule 76
	'/'            reduce using rule 76
	';'            reduce using rule 76
	'<'            reduce using rule 76
	'<='           reduce using rule 76
	'=='           reduce using rule 76
	'>'            reduce using rule 76
	'>='           reduce using rule 76
	'and'          reduce using rule 76
	'do'           reduce using rule 76
	'or'           reduce using rule 76
	'then'         reduce using rule 76
	%eof           reduce using rule 76


State 55

	Exp6 -> '(' . Exp ')'                               (rule 80)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp            goto state 127
	Exp1           goto state 47
	Exp2           goto state 48
	Exp3           goto state 49
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 56

	Exp5 -> '-' . Integer                               (rule 72)

	L_integ        shift, and enter state 59

	Integer        goto state 126

State 57

	Exp5 -> 'not' . Exp6                                (rule 73)

	'('            shift, and enter state 55
	'false'        shift, and enter state 27
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp6           goto state 125
	Bool           goto state 54

State 58

	Arg -> 'ref' . Ident                                (rule 85)

	L_Ident        shift, and enter state 25

	Ident          goto state 124

State 59

	Integer -> L_integ .                                (rule 25)

	'!='           reduce using rule 25
	'#'            reduce using rule 25
	')'            reduce using rule 25
	'*'            reduce using rule 25
	'+'            reduce using rule 25
	','            reduce using rule 25
	'-'            reduce using rule 25
	'/'            reduce using rule 25
	';'            reduce using rule 25
	'<'            reduce using rule 25
	'<='           reduce using rule 25
	'=='           reduce using rule 25
	'>'            reduce using rule 25
	'>='           reduce using rule 25
	'and'          reduce using rule 25
	'do'           reduce using rule 25
	'or'           reduce using rule 25
	'then'         reduce using rule 25
	%eof           reduce using rule 25


State 60

	String -> L_quoted .                                (rule 26)

	'!='           reduce using rule 26
	'#'            reduce using rule 26
	')'            reduce using rule 26
	'*'            reduce using rule 26
	'+'            reduce using rule 26
	','            reduce using rule 26
	'-'            reduce using rule 26
	'/'            reduce using rule 26
	';'            reduce using rule 26
	'<'            reduce using rule 26
	'<='           reduce using rule 26
	'=='           reduce using rule 26
	'>'            reduce using rule 26
	'>='           reduce using rule 26
	'and'          reduce using rule 26
	'do'           reduce using rule 26
	'or'           reduce using rule 26
	'then'         reduce using rule 26
	%eof           reduce using rule 26


State 61

	%start_pListArg_internal -> ListArg .               (rule 17)

	%eof           accept


State 62

	ListArg -> Arg .                                    (rule 82)
	ListArg -> Arg . ',' ListArg                        (rule 83)

	')'            reduce using rule 82
	','            shift, and enter state 123
	%eof           reduce using rule 82


State 63

	%start_pExp6_internal -> Exp6 .                     (rule 16)

	%eof           accept


State 64

	%start_pExp5_internal -> Exp5 .                     (rule 15)

	%eof           accept


State 65

	%start_pExp4_internal -> Exp4 .                     (rule 14)
	Exp4 -> Exp4 . '*' Exp5                             (rule 69)
	Exp4 -> Exp4 . '/' Exp5                             (rule 70)

	'*'            shift, and enter state 121
	'/'            shift, and enter state 122
	%eof           accept


State 66

	%start_pExp3_internal -> Exp3 .                     (rule 13)
	Exp3 -> Exp3 . '+' Exp4                             (rule 65)
	Exp3 -> Exp3 . '-' Exp4                             (rule 66)
	Exp3 -> Exp3 . '#' Exp4                             (rule 67)

	'#'            shift, and enter state 118
	'+'            shift, and enter state 119
	'-'            shift, and enter state 120
	%eof           accept


State 67

	%start_pExp2_internal -> Exp2 .                     (rule 12)

	%eof           accept


State 68

	%start_pExp1_internal -> Exp1 .                     (rule 11)

	%eof           accept


State 69

	%start_pExp_internal -> Exp .                       (rule 10)

	%eof           accept


State 70

	Instr -> Ident . '=' Exp ';'                        (rule 39)
	Exp6 -> Ident .                                     (rule 78)
	Exp6 -> Ident . '(' ListArg ')'                     (rule 79)

	'!='           reduce using rule 78
	'#'            reduce using rule 78
	'('            shift, and enter state 116
	'*'            reduce using rule 78
	'+'            reduce using rule 78
	'-'            reduce using rule 78
	'/'            reduce using rule 78
	';'            reduce using rule 78
	'<'            reduce using rule 78
	'<='           reduce using rule 78
	'='            shift, and enter state 117
	'=='           reduce using rule 78
	'>'            reduce using rule 78
	'>='           reduce using rule 78
	'and'          reduce using rule 78
	'or'           reduce using rule 78


State 71

	Instr -> Block .                                    (rule 48)

	'('            reduce using rule 48
	'-'            reduce using rule 48
	'break'        reduce using rule 48
	'continue'     reduce using rule 48
	'else'         reduce using rule 48
	'false'        reduce using rule 48
	'fi'           reduce using rule 48
	'if'           reduce using rule 48
	'not'          reduce using rule 48
	'print'        reduce using rule 48
	'raise'        reduce using rule 48
	'return'       reduce using rule 48
	'true'         reduce using rule 48
	'try'          reduce using rule 48
	'while'        reduce using rule 48
	'{'            reduce using rule 48
	'}'            reduce using rule 48
	L_Ident        reduce using rule 48
	L_integ        reduce using rule 48
	L_quoted       reduce using rule 48
	%eof           reduce using rule 48


State 72

	ListInstr -> Instr . ListInstr                      (rule 53)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'break'        shift, and enter state 75
	'continue'     shift, and enter state 76
	'false'        shift, and enter state 27
	'if'           shift, and enter state 77
	'not'          shift, and enter state 57
	'print'        shift, and enter state 78
	'raise'        shift, and enter state 79
	'return'       shift, and enter state 80
	'true'         shift, and enter state 28
	'try'          shift, and enter state 81
	'while'        shift, and enter state 82
	'{'            shift, and enter state 83
	'}'            reduce using rule 52
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60
	%eof           reduce using rule 52

	Ident          goto state 70
	Integer        goto state 44
	String         goto state 45
	Block          goto state 71
	Instr          goto state 72
	ListInstr      goto state 115
	Exp            goto state 74
	Exp1           goto state 47
	Exp2           goto state 48
	Exp3           goto state 49
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 73

	%start_pListInstr_internal -> ListInstr .           (rule 9)

	%eof           accept


State 74

	Instr -> Exp . ';'                                  (rule 49)

	';'            shift, and enter state 114


State 75

	Instr -> 'break' . ';'                              (rule 44)

	';'            shift, and enter state 113


State 76

	Instr -> 'continue' . ';'                           (rule 46)

	';'            shift, and enter state 112


State 77

	Instr -> 'if' . Exp 'then' Instr Else 'fi' ';'      (rule 40)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp            goto state 111
	Exp1           goto state 47
	Exp2           goto state 48
	Exp3           goto state 49
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 78

	Instr -> 'print' . Exp ';'                          (rule 42)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp            goto state 110
	Exp1           goto state 47
	Exp2           goto state 48
	Exp3           goto state 49
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 79

	Instr -> 'raise' . Ident ';'                        (rule 45)

	L_Ident        shift, and enter state 25

	Ident          goto state 109

State 80

	Instr -> 'return' . Exp ';'                         (rule 43)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp            goto state 108
	Exp1           goto state 47
	Exp2           goto state 48
	Exp3           goto state 49
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 81

	Instr -> 'try' . Block 'except' Ident ListIdent Block    (rule 47)

	'{'            shift, and enter state 83

	Block          goto state 107

State 82

	Instr -> 'while' . Exp 'do' Instr                   (rule 41)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp            goto state 106
	Exp1           goto state 47
	Exp2           goto state 48
	Exp3           goto state 49
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 83

	Block -> '{' . ListDecl ListInstr '}' ';'           (rule 38)

	'('            reduce using rule 89
	'-'            reduce using rule 89
	'bool'         shift, and enter state 30
	'break'        reduce using rule 89
	'const'        shift, and enter state 40
	'continue'     reduce using rule 89
	'def'          shift, and enter state 35
	'false'        reduce using rule 89
	'if'           reduce using rule 89
	'int'          shift, and enter state 31
	'not'          reduce using rule 89
	'print'        reduce using rule 89
	'raise'        reduce using rule 89
	'return'       reduce using rule 89
	'str'          shift, and enter state 32
	'true'         reduce using rule 89
	'try'          reduce using rule 89
	'while'        reduce using rule 89
	'{'            reduce using rule 89
	'}'            reduce using rule 89
	L_Ident        reduce using rule 89
	L_integ        reduce using rule 89
	L_quoted       reduce using rule 89

	FunDecl        goto state 36
	Decl           goto state 37
	ListDecl       goto state 105
	Type           goto state 39

State 84

	%start_pElse_internal -> Else .                     (rule 8)

	%eof           accept


State 85

	Else -> 'else' . Instr                              (rule 51)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'break'        shift, and enter state 75
	'continue'     shift, and enter state 76
	'false'        shift, and enter state 27
	'if'           shift, and enter state 77
	'not'          shift, and enter state 57
	'print'        shift, and enter state 78
	'raise'        shift, and enter state 79
	'return'       shift, and enter state 80
	'true'         shift, and enter state 28
	'try'          shift, and enter state 81
	'while'        shift, and enter state 82
	'{'            shift, and enter state 83
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 70
	Integer        goto state 44
	String         goto state 45
	Block          goto state 71
	Instr          goto state 104
	Exp            goto state 74
	Exp1           goto state 47
	Exp2           goto state 48
	Exp3           goto state 49
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 86

	%start_pInstr_internal -> Instr .                   (rule 7)

	%eof           accept


State 87

	%start_pBlock_internal -> Block .                   (rule 6)

	%eof           accept


State 88

	ListArgDecl -> ArgDecl .                            (rule 36)
	ListArgDecl -> ArgDecl . ',' ListArgDecl            (rule 37)

	')'            reduce using rule 36
	','            shift, and enter state 103
	%eof           reduce using rule 36


State 89

	%start_pListArgDecl_internal -> ListArgDecl .       (rule 5)

	%eof           accept


State 90

	ArgDecl -> Type . Ident                             (rule 33)

	L_Ident        shift, and enter state 25

	Ident          goto state 102

State 91

	ArgDecl -> 'const' . Type Ident                     (rule 34)

	'bool'         shift, and enter state 30
	'int'          shift, and enter state 31
	'str'          shift, and enter state 32

	Type           goto state 101

State 92

	%start_pArgDecl_internal -> ArgDecl .               (rule 4)

	%eof           accept


State 93

	%start_pDecl_internal -> Decl .                     (rule 3)

	%eof           accept


State 94

	%start_pFunDecl_internal -> FunDecl .               (rule 2)

	%eof           accept


State 95

	%start_pMain_internal -> Main .                     (rule 1)

	%eof           accept


State 96

	Main -> 'main' . Block                              (rule 28)

	'{'            shift, and enter state 83

	Block          goto state 100

State 97

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 98

	Program -> ListFunDecl . Main                       (rule 27)

	'main'         shift, and enter state 96

	Main           goto state 99

State 99

	Program -> ListFunDecl Main .                       (rule 27)

	%eof           reduce using rule 27


State 100

	Main -> 'main' Block .                              (rule 28)

	%eof           reduce using rule 28


State 101

	ArgDecl -> 'const' Type . Ident                     (rule 34)

	L_Ident        shift, and enter state 25

	Ident          goto state 171

State 102

	ArgDecl -> Type Ident .                             (rule 33)

	')'            reduce using rule 33
	','            reduce using rule 33
	%eof           reduce using rule 33


State 103

	ListArgDecl -> ArgDecl ',' . ListArgDecl            (rule 37)

	')'            reduce using rule 35
	'bool'         shift, and enter state 30
	'const'        shift, and enter state 91
	'int'          shift, and enter state 31
	'str'          shift, and enter state 32
	%eof           reduce using rule 35

	ArgDecl        goto state 88
	ListArgDecl    goto state 170
	Type           goto state 90

State 104

	Else -> 'else' Instr .                              (rule 51)

	'fi'           reduce using rule 51
	%eof           reduce using rule 51


State 105

	Block -> '{' ListDecl . ListInstr '}' ';'           (rule 38)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'break'        shift, and enter state 75
	'continue'     shift, and enter state 76
	'false'        shift, and enter state 27
	'if'           shift, and enter state 77
	'not'          shift, and enter state 57
	'print'        shift, and enter state 78
	'raise'        shift, and enter state 79
	'return'       shift, and enter state 80
	'true'         shift, and enter state 28
	'try'          shift, and enter state 81
	'while'        shift, and enter state 82
	'{'            shift, and enter state 83
	'}'            reduce using rule 52
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 70
	Integer        goto state 44
	String         goto state 45
	Block          goto state 71
	Instr          goto state 72
	ListInstr      goto state 169
	Exp            goto state 74
	Exp1           goto state 47
	Exp2           goto state 48
	Exp3           goto state 49
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 106

	Instr -> 'while' Exp . 'do' Instr                   (rule 41)

	'do'           shift, and enter state 168


State 107

	Instr -> 'try' Block . 'except' Ident ListIdent Block    (rule 47)

	'except'       shift, and enter state 167


State 108

	Instr -> 'return' Exp . ';'                         (rule 43)

	';'            shift, and enter state 166


State 109

	Instr -> 'raise' Ident . ';'                        (rule 45)

	';'            shift, and enter state 165


State 110

	Instr -> 'print' Exp . ';'                          (rule 42)

	';'            shift, and enter state 164


State 111

	Instr -> 'if' Exp . 'then' Instr Else 'fi' ';'      (rule 40)

	'then'         shift, and enter state 163


State 112

	Instr -> 'continue' ';' .                           (rule 46)

	'('            reduce using rule 46
	'-'            reduce using rule 46
	'break'        reduce using rule 46
	'continue'     reduce using rule 46
	'else'         reduce using rule 46
	'false'        reduce using rule 46
	'fi'           reduce using rule 46
	'if'           reduce using rule 46
	'not'          reduce using rule 46
	'print'        reduce using rule 46
	'raise'        reduce using rule 46
	'return'       reduce using rule 46
	'true'         reduce using rule 46
	'try'          reduce using rule 46
	'while'        reduce using rule 46
	'{'            reduce using rule 46
	'}'            reduce using rule 46
	L_Ident        reduce using rule 46
	L_integ        reduce using rule 46
	L_quoted       reduce using rule 46
	%eof           reduce using rule 46


State 113

	Instr -> 'break' ';' .                              (rule 44)

	'('            reduce using rule 44
	'-'            reduce using rule 44
	'break'        reduce using rule 44
	'continue'     reduce using rule 44
	'else'         reduce using rule 44
	'false'        reduce using rule 44
	'fi'           reduce using rule 44
	'if'           reduce using rule 44
	'not'          reduce using rule 44
	'print'        reduce using rule 44
	'raise'        reduce using rule 44
	'return'       reduce using rule 44
	'true'         reduce using rule 44
	'try'          reduce using rule 44
	'while'        reduce using rule 44
	'{'            reduce using rule 44
	'}'            reduce using rule 44
	L_Ident        reduce using rule 44
	L_integ        reduce using rule 44
	L_quoted       reduce using rule 44
	%eof           reduce using rule 44


State 114

	Instr -> Exp ';' .                                  (rule 49)

	'('            reduce using rule 49
	'-'            reduce using rule 49
	'break'        reduce using rule 49
	'continue'     reduce using rule 49
	'else'         reduce using rule 49
	'false'        reduce using rule 49
	'fi'           reduce using rule 49
	'if'           reduce using rule 49
	'not'          reduce using rule 49
	'print'        reduce using rule 49
	'raise'        reduce using rule 49
	'return'       reduce using rule 49
	'true'         reduce using rule 49
	'try'          reduce using rule 49
	'while'        reduce using rule 49
	'{'            reduce using rule 49
	'}'            reduce using rule 49
	L_Ident        reduce using rule 49
	L_integ        reduce using rule 49
	L_quoted       reduce using rule 49
	%eof           reduce using rule 49


State 115

	ListInstr -> Instr ListInstr .                      (rule 53)

	'}'            reduce using rule 53
	%eof           reduce using rule 53


State 116

	Exp6 -> Ident '(' . ListArg ')'                     (rule 79)

	'('            shift, and enter state 55
	')'            reduce using rule 81
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'ref'          shift, and enter state 58
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp            goto state 46
	Exp1           goto state 47
	Exp2           goto state 48
	Exp3           goto state 49
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	ListArg        goto state 162
	Arg            goto state 62
	Bool           goto state 54

State 117

	Instr -> Ident '=' . Exp ';'                        (rule 39)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp            goto state 161
	Exp1           goto state 47
	Exp2           goto state 48
	Exp3           goto state 49
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 118

	Exp3 -> Exp3 '#' . Exp4                             (rule 67)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp4           goto state 160
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 119

	Exp3 -> Exp3 '+' . Exp4                             (rule 65)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp4           goto state 159
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 120

	Exp3 -> Exp3 '-' . Exp4                             (rule 66)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp4           goto state 158
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 121

	Exp4 -> Exp4 '*' . Exp5                             (rule 69)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp5           goto state 157
	Exp6           goto state 52
	Bool           goto state 54

State 122

	Exp4 -> Exp4 '/' . Exp5                             (rule 70)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp5           goto state 156
	Exp6           goto state 52
	Bool           goto state 54

State 123

	ListArg -> Arg ',' . ListArg                        (rule 83)

	'('            shift, and enter state 55
	')'            reduce using rule 81
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'ref'          shift, and enter state 58
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60
	%eof           reduce using rule 81

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp            goto state 46
	Exp1           goto state 47
	Exp2           goto state 48
	Exp3           goto state 49
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	ListArg        goto state 155
	Arg            goto state 62
	Bool           goto state 54

State 124

	Arg -> 'ref' Ident .                                (rule 85)

	')'            reduce using rule 85
	','            reduce using rule 85
	%eof           reduce using rule 85


State 125

	Exp5 -> 'not' Exp6 .                                (rule 73)

	'!='           reduce using rule 73
	'#'            reduce using rule 73
	')'            reduce using rule 73
	'*'            reduce using rule 73
	'+'            reduce using rule 73
	','            reduce using rule 73
	'-'            reduce using rule 73
	'/'            reduce using rule 73
	';'            reduce using rule 73
	'<'            reduce using rule 73
	'<='           reduce using rule 73
	'=='           reduce using rule 73
	'>'            reduce using rule 73
	'>='           reduce using rule 73
	'and'          reduce using rule 73
	'do'           reduce using rule 73
	'or'           reduce using rule 73
	'then'         reduce using rule 73
	%eof           reduce using rule 73


State 126

	Exp5 -> '-' Integer .                               (rule 72)

	'!='           reduce using rule 72
	'#'            reduce using rule 72
	')'            reduce using rule 72
	'*'            reduce using rule 72
	'+'            reduce using rule 72
	','            reduce using rule 72
	'-'            reduce using rule 72
	'/'            reduce using rule 72
	';'            reduce using rule 72
	'<'            reduce using rule 72
	'<='           reduce using rule 72
	'=='           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	'and'          reduce using rule 72
	'do'           reduce using rule 72
	'or'           reduce using rule 72
	'then'         reduce using rule 72
	%eof           reduce using rule 72


State 127

	Exp6 -> '(' Exp . ')'                               (rule 80)

	')'            shift, and enter state 154


State 128

	Exp2 -> Exp3 '!=' . Exp3                            (rule 59)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp3           goto state 153
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 129

	Exp2 -> Exp3 '<' . Exp3                             (rule 62)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp3           goto state 152
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 130

	Exp2 -> Exp3 '<=' . Exp3                            (rule 60)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp3           goto state 151
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 131

	Exp2 -> Exp3 '==' . Exp3                            (rule 58)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp3           goto state 150
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 132

	Exp2 -> Exp3 '>' . Exp3                             (rule 63)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp3           goto state 149
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 133

	Exp2 -> Exp3 '>=' . Exp3                            (rule 61)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp3           goto state 148
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 134

	Exp1 -> Exp2 'and' . Exp1                           (rule 56)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp1           goto state 147
	Exp2           goto state 48
	Exp3           goto state 49
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 135

	Exp -> Exp1 'or' . Exp                              (rule 54)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp            goto state 146
	Exp1           goto state 47
	Exp2           goto state 48
	Exp3           goto state 49
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 136

	ListIdent -> Ident ',' . ListIdent                  (rule 88)

	'{'            reduce using rule 86
	L_Ident        shift, and enter state 25
	%eof           reduce using rule 86

	Ident          goto state 41
	ListIdent      goto state 145

State 137

	Decl -> 'const' Type . Ident '=' Exp ';'            (rule 32)

	L_Ident        shift, and enter state 25

	Ident          goto state 144

State 138

	Decl -> Type Ident . '=' Exp ';'                    (rule 31)

	'='            shift, and enter state 143


State 139

	ListDecl -> Decl ListDecl .                         (rule 90)

	'('            reduce using rule 90
	'-'            reduce using rule 90
	'break'        reduce using rule 90
	'continue'     reduce using rule 90
	'false'        reduce using rule 90
	'if'           reduce using rule 90
	'not'          reduce using rule 90
	'print'        reduce using rule 90
	'raise'        reduce using rule 90
	'return'       reduce using rule 90
	'true'         reduce using rule 90
	'try'          reduce using rule 90
	'while'        reduce using rule 90
	'{'            reduce using rule 90
	'}'            reduce using rule 90
	L_Ident        reduce using rule 90
	L_integ        reduce using rule 90
	L_quoted       reduce using rule 90
	%eof           reduce using rule 90


State 140

	FunDecl -> 'def' Type . Ident '(' ListArgDecl ')' Block    (rule 29)

	L_Ident        shift, and enter state 25

	Ident          goto state 142

State 141

	ListFunDecl -> FunDecl ListFunDecl .                (rule 92)

	'main'         reduce using rule 92
	%eof           reduce using rule 92


State 142

	FunDecl -> 'def' Type Ident . '(' ListArgDecl ')' Block    (rule 29)

	'('            shift, and enter state 180


State 143

	Decl -> Type Ident '=' . Exp ';'                    (rule 31)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp            goto state 179
	Exp1           goto state 47
	Exp2           goto state 48
	Exp3           goto state 49
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 144

	Decl -> 'const' Type Ident . '=' Exp ';'            (rule 32)

	'='            shift, and enter state 178


State 145

	ListIdent -> Ident ',' ListIdent .                  (rule 88)

	'{'            reduce using rule 88
	%eof           reduce using rule 88


State 146

	Exp -> Exp1 'or' Exp .                              (rule 54)

	')'            reduce using rule 54
	','            reduce using rule 54
	';'            reduce using rule 54
	'do'           reduce using rule 54
	'then'         reduce using rule 54
	%eof           reduce using rule 54


State 147

	Exp1 -> Exp2 'and' Exp1 .                           (rule 56)

	')'            reduce using rule 56
	','            reduce using rule 56
	';'            reduce using rule 56
	'do'           reduce using rule 56
	'or'           reduce using rule 56
	'then'         reduce using rule 56
	%eof           reduce using rule 56


State 148

	Exp2 -> Exp3 '>=' Exp3 .                            (rule 61)
	Exp3 -> Exp3 . '+' Exp4                             (rule 65)
	Exp3 -> Exp3 . '-' Exp4                             (rule 66)
	Exp3 -> Exp3 . '#' Exp4                             (rule 67)

	'#'            shift, and enter state 118
	')'            reduce using rule 61
	'+'            shift, and enter state 119
	','            reduce using rule 61
	'-'            shift, and enter state 120
	';'            reduce using rule 61
	'and'          reduce using rule 61
	'do'           reduce using rule 61
	'or'           reduce using rule 61
	'then'         reduce using rule 61
	%eof           reduce using rule 61


State 149

	Exp2 -> Exp3 '>' Exp3 .                             (rule 63)
	Exp3 -> Exp3 . '+' Exp4                             (rule 65)
	Exp3 -> Exp3 . '-' Exp4                             (rule 66)
	Exp3 -> Exp3 . '#' Exp4                             (rule 67)

	'#'            shift, and enter state 118
	')'            reduce using rule 63
	'+'            shift, and enter state 119
	','            reduce using rule 63
	'-'            shift, and enter state 120
	';'            reduce using rule 63
	'and'          reduce using rule 63
	'do'           reduce using rule 63
	'or'           reduce using rule 63
	'then'         reduce using rule 63
	%eof           reduce using rule 63


State 150

	Exp2 -> Exp3 '==' Exp3 .                            (rule 58)
	Exp3 -> Exp3 . '+' Exp4                             (rule 65)
	Exp3 -> Exp3 . '-' Exp4                             (rule 66)
	Exp3 -> Exp3 . '#' Exp4                             (rule 67)

	'#'            shift, and enter state 118
	')'            reduce using rule 58
	'+'            shift, and enter state 119
	','            reduce using rule 58
	'-'            shift, and enter state 120
	';'            reduce using rule 58
	'and'          reduce using rule 58
	'do'           reduce using rule 58
	'or'           reduce using rule 58
	'then'         reduce using rule 58
	%eof           reduce using rule 58


State 151

	Exp2 -> Exp3 '<=' Exp3 .                            (rule 60)
	Exp3 -> Exp3 . '+' Exp4                             (rule 65)
	Exp3 -> Exp3 . '-' Exp4                             (rule 66)
	Exp3 -> Exp3 . '#' Exp4                             (rule 67)

	'#'            shift, and enter state 118
	')'            reduce using rule 60
	'+'            shift, and enter state 119
	','            reduce using rule 60
	'-'            shift, and enter state 120
	';'            reduce using rule 60
	'and'          reduce using rule 60
	'do'           reduce using rule 60
	'or'           reduce using rule 60
	'then'         reduce using rule 60
	%eof           reduce using rule 60


State 152

	Exp2 -> Exp3 '<' Exp3 .                             (rule 62)
	Exp3 -> Exp3 . '+' Exp4                             (rule 65)
	Exp3 -> Exp3 . '-' Exp4                             (rule 66)
	Exp3 -> Exp3 . '#' Exp4                             (rule 67)

	'#'            shift, and enter state 118
	')'            reduce using rule 62
	'+'            shift, and enter state 119
	','            reduce using rule 62
	'-'            shift, and enter state 120
	';'            reduce using rule 62
	'and'          reduce using rule 62
	'do'           reduce using rule 62
	'or'           reduce using rule 62
	'then'         reduce using rule 62
	%eof           reduce using rule 62


State 153

	Exp2 -> Exp3 '!=' Exp3 .                            (rule 59)
	Exp3 -> Exp3 . '+' Exp4                             (rule 65)
	Exp3 -> Exp3 . '-' Exp4                             (rule 66)
	Exp3 -> Exp3 . '#' Exp4                             (rule 67)

	'#'            shift, and enter state 118
	')'            reduce using rule 59
	'+'            shift, and enter state 119
	','            reduce using rule 59
	'-'            shift, and enter state 120
	';'            reduce using rule 59
	'and'          reduce using rule 59
	'do'           reduce using rule 59
	'or'           reduce using rule 59
	'then'         reduce using rule 59
	%eof           reduce using rule 59


State 154

	Exp6 -> '(' Exp ')' .                               (rule 80)

	'!='           reduce using rule 80
	'#'            reduce using rule 80
	')'            reduce using rule 80
	'*'            reduce using rule 80
	'+'            reduce using rule 80
	','            reduce using rule 80
	'-'            reduce using rule 80
	'/'            reduce using rule 80
	';'            reduce using rule 80
	'<'            reduce using rule 80
	'<='           reduce using rule 80
	'=='           reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	'and'          reduce using rule 80
	'do'           reduce using rule 80
	'or'           reduce using rule 80
	'then'         reduce using rule 80
	%eof           reduce using rule 80


State 155

	ListArg -> Arg ',' ListArg .                        (rule 83)

	')'            reduce using rule 83
	%eof           reduce using rule 83


State 156

	Exp4 -> Exp4 '/' Exp5 .                             (rule 70)

	'!='           reduce using rule 70
	'#'            reduce using rule 70
	')'            reduce using rule 70
	'*'            reduce using rule 70
	'+'            reduce using rule 70
	','            reduce using rule 70
	'-'            reduce using rule 70
	'/'            reduce using rule 70
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	'and'          reduce using rule 70
	'do'           reduce using rule 70
	'or'           reduce using rule 70
	'then'         reduce using rule 70
	%eof           reduce using rule 70


State 157

	Exp4 -> Exp4 '*' Exp5 .                             (rule 69)

	'!='           reduce using rule 69
	'#'            reduce using rule 69
	')'            reduce using rule 69
	'*'            reduce using rule 69
	'+'            reduce using rule 69
	','            reduce using rule 69
	'-'            reduce using rule 69
	'/'            reduce using rule 69
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	'and'          reduce using rule 69
	'do'           reduce using rule 69
	'or'           reduce using rule 69
	'then'         reduce using rule 69
	%eof           reduce using rule 69


State 158

	Exp3 -> Exp3 '-' Exp4 .                             (rule 66)
	Exp4 -> Exp4 . '*' Exp5                             (rule 69)
	Exp4 -> Exp4 . '/' Exp5                             (rule 70)

	'!='           reduce using rule 66
	'#'            reduce using rule 66
	')'            reduce using rule 66
	'*'            shift, and enter state 121
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'/'            shift, and enter state 122
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'and'          reduce using rule 66
	'do'           reduce using rule 66
	'or'           reduce using rule 66
	'then'         reduce using rule 66
	%eof           reduce using rule 66


State 159

	Exp3 -> Exp3 '+' Exp4 .                             (rule 65)
	Exp4 -> Exp4 . '*' Exp5                             (rule 69)
	Exp4 -> Exp4 . '/' Exp5                             (rule 70)

	'!='           reduce using rule 65
	'#'            reduce using rule 65
	')'            reduce using rule 65
	'*'            shift, and enter state 121
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'/'            shift, and enter state 122
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'and'          reduce using rule 65
	'do'           reduce using rule 65
	'or'           reduce using rule 65
	'then'         reduce using rule 65
	%eof           reduce using rule 65


State 160

	Exp3 -> Exp3 '#' Exp4 .                             (rule 67)
	Exp4 -> Exp4 . '*' Exp5                             (rule 69)
	Exp4 -> Exp4 . '/' Exp5                             (rule 70)

	'!='           reduce using rule 67
	'#'            reduce using rule 67
	')'            reduce using rule 67
	'*'            shift, and enter state 121
	'+'            reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'/'            shift, and enter state 122
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	'and'          reduce using rule 67
	'do'           reduce using rule 67
	'or'           reduce using rule 67
	'then'         reduce using rule 67
	%eof           reduce using rule 67


State 161

	Instr -> Ident '=' Exp . ';'                        (rule 39)

	';'            shift, and enter state 177


State 162

	Exp6 -> Ident '(' ListArg . ')'                     (rule 79)

	')'            shift, and enter state 176


State 163

	Instr -> 'if' Exp 'then' . Instr Else 'fi' ';'      (rule 40)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'break'        shift, and enter state 75
	'continue'     shift, and enter state 76
	'false'        shift, and enter state 27
	'if'           shift, and enter state 77
	'not'          shift, and enter state 57
	'print'        shift, and enter state 78
	'raise'        shift, and enter state 79
	'return'       shift, and enter state 80
	'true'         shift, and enter state 28
	'try'          shift, and enter state 81
	'while'        shift, and enter state 82
	'{'            shift, and enter state 83
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 70
	Integer        goto state 44
	String         goto state 45
	Block          goto state 71
	Instr          goto state 175
	Exp            goto state 74
	Exp1           goto state 47
	Exp2           goto state 48
	Exp3           goto state 49
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 164

	Instr -> 'print' Exp ';' .                          (rule 42)

	'('            reduce using rule 42
	'-'            reduce using rule 42
	'break'        reduce using rule 42
	'continue'     reduce using rule 42
	'else'         reduce using rule 42
	'false'        reduce using rule 42
	'fi'           reduce using rule 42
	'if'           reduce using rule 42
	'not'          reduce using rule 42
	'print'        reduce using rule 42
	'raise'        reduce using rule 42
	'return'       reduce using rule 42
	'true'         reduce using rule 42
	'try'          reduce using rule 42
	'while'        reduce using rule 42
	'{'            reduce using rule 42
	'}'            reduce using rule 42
	L_Ident        reduce using rule 42
	L_integ        reduce using rule 42
	L_quoted       reduce using rule 42
	%eof           reduce using rule 42


State 165

	Instr -> 'raise' Ident ';' .                        (rule 45)

	'('            reduce using rule 45
	'-'            reduce using rule 45
	'break'        reduce using rule 45
	'continue'     reduce using rule 45
	'else'         reduce using rule 45
	'false'        reduce using rule 45
	'fi'           reduce using rule 45
	'if'           reduce using rule 45
	'not'          reduce using rule 45
	'print'        reduce using rule 45
	'raise'        reduce using rule 45
	'return'       reduce using rule 45
	'true'         reduce using rule 45
	'try'          reduce using rule 45
	'while'        reduce using rule 45
	'{'            reduce using rule 45
	'}'            reduce using rule 45
	L_Ident        reduce using rule 45
	L_integ        reduce using rule 45
	L_quoted       reduce using rule 45
	%eof           reduce using rule 45


State 166

	Instr -> 'return' Exp ';' .                         (rule 43)

	'('            reduce using rule 43
	'-'            reduce using rule 43
	'break'        reduce using rule 43
	'continue'     reduce using rule 43
	'else'         reduce using rule 43
	'false'        reduce using rule 43
	'fi'           reduce using rule 43
	'if'           reduce using rule 43
	'not'          reduce using rule 43
	'print'        reduce using rule 43
	'raise'        reduce using rule 43
	'return'       reduce using rule 43
	'true'         reduce using rule 43
	'try'          reduce using rule 43
	'while'        reduce using rule 43
	'{'            reduce using rule 43
	'}'            reduce using rule 43
	L_Ident        reduce using rule 43
	L_integ        reduce using rule 43
	L_quoted       reduce using rule 43
	%eof           reduce using rule 43


State 167

	Instr -> 'try' Block 'except' . Ident ListIdent Block    (rule 47)

	L_Ident        shift, and enter state 25

	Ident          goto state 174

State 168

	Instr -> 'while' Exp 'do' . Instr                   (rule 41)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'break'        shift, and enter state 75
	'continue'     shift, and enter state 76
	'false'        shift, and enter state 27
	'if'           shift, and enter state 77
	'not'          shift, and enter state 57
	'print'        shift, and enter state 78
	'raise'        shift, and enter state 79
	'return'       shift, and enter state 80
	'true'         shift, and enter state 28
	'try'          shift, and enter state 81
	'while'        shift, and enter state 82
	'{'            shift, and enter state 83
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 70
	Integer        goto state 44
	String         goto state 45
	Block          goto state 71
	Instr          goto state 173
	Exp            goto state 74
	Exp1           goto state 47
	Exp2           goto state 48
	Exp3           goto state 49
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 169

	Block -> '{' ListDecl ListInstr . '}' ';'           (rule 38)

	'}'            shift, and enter state 172


State 170

	ListArgDecl -> ArgDecl ',' ListArgDecl .            (rule 37)

	')'            reduce using rule 37
	%eof           reduce using rule 37


State 171

	ArgDecl -> 'const' Type Ident .                     (rule 34)

	')'            reduce using rule 34
	','            reduce using rule 34
	%eof           reduce using rule 34


State 172

	Block -> '{' ListDecl ListInstr '}' . ';'           (rule 38)

	';'            shift, and enter state 186


State 173

	Instr -> 'while' Exp 'do' Instr .                   (rule 41)

	'('            reduce using rule 41
	'-'            reduce using rule 41
	'break'        reduce using rule 41
	'continue'     reduce using rule 41
	'else'         reduce using rule 41
	'false'        reduce using rule 41
	'fi'           reduce using rule 41
	'if'           reduce using rule 41
	'not'          reduce using rule 41
	'print'        reduce using rule 41
	'raise'        reduce using rule 41
	'return'       reduce using rule 41
	'true'         reduce using rule 41
	'try'          reduce using rule 41
	'while'        reduce using rule 41
	'{'            reduce using rule 41
	'}'            reduce using rule 41
	L_Ident        reduce using rule 41
	L_integ        reduce using rule 41
	L_quoted       reduce using rule 41
	%eof           reduce using rule 41


State 174

	Instr -> 'try' Block 'except' Ident . ListIdent Block    (rule 47)

	'{'            reduce using rule 86
	L_Ident        shift, and enter state 25

	Ident          goto state 41
	ListIdent      goto state 185

State 175

	Instr -> 'if' Exp 'then' Instr . Else 'fi' ';'      (rule 40)

	'else'         shift, and enter state 85
	'fi'           reduce using rule 50

	Else           goto state 184

State 176

	Exp6 -> Ident '(' ListArg ')' .                     (rule 79)

	'!='           reduce using rule 79
	'#'            reduce using rule 79
	')'            reduce using rule 79
	'*'            reduce using rule 79
	'+'            reduce using rule 79
	','            reduce using rule 79
	'-'            reduce using rule 79
	'/'            reduce using rule 79
	';'            reduce using rule 79
	'<'            reduce using rule 79
	'<='           reduce using rule 79
	'=='           reduce using rule 79
	'>'            reduce using rule 79
	'>='           reduce using rule 79
	'and'          reduce using rule 79
	'do'           reduce using rule 79
	'or'           reduce using rule 79
	'then'         reduce using rule 79
	%eof           reduce using rule 79


State 177

	Instr -> Ident '=' Exp ';' .                        (rule 39)

	'('            reduce using rule 39
	'-'            reduce using rule 39
	'break'        reduce using rule 39
	'continue'     reduce using rule 39
	'else'         reduce using rule 39
	'false'        reduce using rule 39
	'fi'           reduce using rule 39
	'if'           reduce using rule 39
	'not'          reduce using rule 39
	'print'        reduce using rule 39
	'raise'        reduce using rule 39
	'return'       reduce using rule 39
	'true'         reduce using rule 39
	'try'          reduce using rule 39
	'while'        reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	L_Ident        reduce using rule 39
	L_integ        reduce using rule 39
	L_quoted       reduce using rule 39
	%eof           reduce using rule 39


State 178

	Decl -> 'const' Type Ident '=' . Exp ';'            (rule 32)

	'('            shift, and enter state 55
	'-'            shift, and enter state 56
	'false'        shift, and enter state 27
	'not'          shift, and enter state 57
	'true'         shift, and enter state 28
	L_Ident        shift, and enter state 25
	L_integ        shift, and enter state 59
	L_quoted       shift, and enter state 60

	Ident          goto state 43
	Integer        goto state 44
	String         goto state 45
	Exp            goto state 183
	Exp1           goto state 47
	Exp2           goto state 48
	Exp3           goto state 49
	Exp4           goto state 50
	Exp5           goto state 51
	Exp6           goto state 52
	Bool           goto state 54

State 179

	Decl -> Type Ident '=' Exp . ';'                    (rule 31)

	';'            shift, and enter state 182


State 180

	FunDecl -> 'def' Type Ident '(' . ListArgDecl ')' Block    (rule 29)

	')'            reduce using rule 35
	'bool'         shift, and enter state 30
	'const'        shift, and enter state 91
	'int'          shift, and enter state 31
	'str'          shift, and enter state 32

	ArgDecl        goto state 88
	ListArgDecl    goto state 181
	Type           goto state 90

State 181

	FunDecl -> 'def' Type Ident '(' ListArgDecl . ')' Block    (rule 29)

	')'            shift, and enter state 190


State 182

	Decl -> Type Ident '=' Exp ';' .                    (rule 31)

	'('            reduce using rule 31
	'-'            reduce using rule 31
	'bool'         reduce using rule 31
	'break'        reduce using rule 31
	'const'        reduce using rule 31
	'continue'     reduce using rule 31
	'def'          reduce using rule 31
	'false'        reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'not'          reduce using rule 31
	'print'        reduce using rule 31
	'raise'        reduce using rule 31
	'return'       reduce using rule 31
	'str'          reduce using rule 31
	'true'         reduce using rule 31
	'try'          reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31
	%eof           reduce using rule 31


State 183

	Decl -> 'const' Type Ident '=' Exp . ';'            (rule 32)

	';'            shift, and enter state 189


State 184

	Instr -> 'if' Exp 'then' Instr Else . 'fi' ';'      (rule 40)

	'fi'           shift, and enter state 188


State 185

	Instr -> 'try' Block 'except' Ident ListIdent . Block    (rule 47)

	'{'            shift, and enter state 83

	Block          goto state 187

State 186

	Block -> '{' ListDecl ListInstr '}' ';' .           (rule 38)

	'('            reduce using rule 38
	'-'            reduce using rule 38
	'bool'         reduce using rule 38
	'break'        reduce using rule 38
	'const'        reduce using rule 38
	'continue'     reduce using rule 38
	'def'          reduce using rule 38
	'else'         reduce using rule 38
	'except'       reduce using rule 38
	'false'        reduce using rule 38
	'fi'           reduce using rule 38
	'if'           reduce using rule 38
	'int'          reduce using rule 38
	'main'         reduce using rule 38
	'not'          reduce using rule 38
	'print'        reduce using rule 38
	'raise'        reduce using rule 38
	'return'       reduce using rule 38
	'str'          reduce using rule 38
	'true'         reduce using rule 38
	'try'          reduce using rule 38
	'while'        reduce using rule 38
	'{'            reduce using rule 38
	'}'            reduce using rule 38
	L_Ident        reduce using rule 38
	L_integ        reduce using rule 38
	L_quoted       reduce using rule 38
	%eof           reduce using rule 38


State 187

	Instr -> 'try' Block 'except' Ident ListIdent Block .    (rule 47)

	'('            reduce using rule 47
	'-'            reduce using rule 47
	'break'        reduce using rule 47
	'continue'     reduce using rule 47
	'else'         reduce using rule 47
	'false'        reduce using rule 47
	'fi'           reduce using rule 47
	'if'           reduce using rule 47
	'not'          reduce using rule 47
	'print'        reduce using rule 47
	'raise'        reduce using rule 47
	'return'       reduce using rule 47
	'true'         reduce using rule 47
	'try'          reduce using rule 47
	'while'        reduce using rule 47
	'{'            reduce using rule 47
	'}'            reduce using rule 47
	L_Ident        reduce using rule 47
	L_integ        reduce using rule 47
	L_quoted       reduce using rule 47
	%eof           reduce using rule 47


State 188

	Instr -> 'if' Exp 'then' Instr Else 'fi' . ';'      (rule 40)

	';'            shift, and enter state 192


State 189

	Decl -> 'const' Type Ident '=' Exp ';' .            (rule 32)

	'('            reduce using rule 32
	'-'            reduce using rule 32
	'bool'         reduce using rule 32
	'break'        reduce using rule 32
	'const'        reduce using rule 32
	'continue'     reduce using rule 32
	'def'          reduce using rule 32
	'false'        reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'not'          reduce using rule 32
	'print'        reduce using rule 32
	'raise'        reduce using rule 32
	'return'       reduce using rule 32
	'str'          reduce using rule 32
	'true'         reduce using rule 32
	'try'          reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_Ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32
	%eof           reduce using rule 32


State 190

	FunDecl -> 'def' Type Ident '(' ListArgDecl ')' . Block    (rule 29)

	'{'            shift, and enter state 83

	Block          goto state 191

State 191

	FunDecl -> 'def' Type Ident '(' ListArgDecl ')' Block .    (rule 29)

	'('            reduce using rule 29
	'-'            reduce using rule 29
	'bool'         reduce using rule 29
	'break'        reduce using rule 29
	'const'        reduce using rule 29
	'continue'     reduce using rule 29
	'def'          reduce using rule 29
	'false'        reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'main'         reduce using rule 29
	'not'          reduce using rule 29
	'print'        reduce using rule 29
	'raise'        reduce using rule 29
	'return'       reduce using rule 29
	'str'          reduce using rule 29
	'true'         reduce using rule 29
	'try'          reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29
	%eof           reduce using rule 29


State 192

	Instr -> 'if' Exp 'then' Instr Else 'fi' ';' .      (rule 40)

	'('            reduce using rule 40
	'-'            reduce using rule 40
	'break'        reduce using rule 40
	'continue'     reduce using rule 40
	'else'         reduce using rule 40
	'false'        reduce using rule 40
	'fi'           reduce using rule 40
	'if'           reduce using rule 40
	'not'          reduce using rule 40
	'print'        reduce using rule 40
	'raise'        reduce using rule 40
	'return'       reduce using rule 40
	'true'         reduce using rule 40
	'try'          reduce using rule 40
	'while'        reduce using rule 40
	'{'            reduce using rule 40
	'}'            reduce using rule 40
	L_Ident        reduce using rule 40
	L_integ        reduce using rule 40
	L_quoted       reduce using rule 40
	%eof           reduce using rule 40


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 98
Number of terminals: 46
Number of non-terminals: 51
Number of states: 193
